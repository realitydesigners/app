---
import { Image } from 'astro:assets'
import Logo from '../../../public/logo.svg'
---

<nav
  role="navigation"
  id="navbar"
  class="flex items-center pb-1 pt-1 justify-between flex-wrap border-b border-gray-200 bg-gray-200/75 fixed w-full z-50 h-auto"
>
  <div class="ml-4 relative z-80 logo">
    <a href="/" class="flex-cols z-80 items-center flex">
      <Image src={Logo} alt="logo" class=" p-1 h-10 w-10 mr-2" />
      <div class="hidden lg:flex text-black flex-col">
        <span class="text-lg tracking-wide leading-none">REALITY</span>
        <span class="text-sm leading-none">DESIGNERS</span>
      </div>
    </a>
  </div>

  <div class="flex relative ">
    <button
      id="nav-toggle"
      class="flex items-center relative z-20 mr-5"
      aria-label="Toggle Menu"
    >
      <div class="text-lg text-black mr-2">
        <p class="mt-2">MENU</p>
      </div>
      <svg
        width="20"
        height="20"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
      >
        <path d="M3 12h18M3 6h18M3 18h18" stroke="#000" stroke-width="2"></path>
      </svg>
    </button>
  </div>

  <div
  id="nav-content"
  role="menu"
  class="absolute right-2 top-2 rounded-2xl border border-gray-200/20 bg-black/40 lg:w-1/3 sm:w-2/3 w-3/4 h-[95vh] overflow-y-auto  flex-grow flex items-center hidden"
>
    <div class="w-full h-full p-2 relative ">
      <ul
        class="flex relative  mt-20 p-2 gap-2 h-auto lg:h-auto flex-col  lg:justify-end uppercase text-black text-5xl lg:text-6xl"
      >
      <li>
        <a href="/library" class="block px-3 py-1 text-white hover:bg-gray-200/30 rounded-lg">Library</a>
      </li>
      <li>
        <a href="/story" class="block px-3 py-1 text-white hover:bg-gray-200/30 rounded-lg">Story</a>
      </li>
      <li>
        <a href="/feed" class="block px-3 py-1 text-white hover:bg-gray-200/30 rounded-lg">Feed</a>
      </li>
      <li>
        <a href="/team" class="block px-3 py-1 text-white hover:bg-gray-200/30 rounded-lg">Team</a>
      </li>
      <li>
        <a href="/assets" class="block px-3 py-1 text-white hover:bg-gray-200/30 rounded-lg">3D</a>
      </li>
        
      </ul>
      <div class="w-full h-auto justify-center flex  p-2 bottom-0 rounded-xl relative ">
        <ul
        class="flex flex-row flex-wrap h-auto text-sm "
      >
        <li class="px-3 py-1 text-white hover:bg-gray-200/30 rounded-lg ">
          <a href="/about">About</a>
        </li>
        <li class="px-3 py-1 text-white hover:bg-gray-200/30 rounded-lg ">
          <a href="/become-a-creator">Become A Creator</a>
        </li>
   
        <li class="px-3 py-1 text-white hover:bg-gray-200/30 rounded-lg ">
          <a href="/team">Contact </a>
        </li>
     
      </ul>
      </div>
    
    </div>

    </div>
  </div>
</nav>

<style>
  p,
  a,
  span {
    font-family: 'Rajdhani', sans-serif;
    font-weight: 700;
  }

  #nav-toggle:focus {
    outline: none;
    border: none;
  }

  #nav-toggle:active,
  #nav-toggle:hover {
    border: none;
  }

  #nav-content {
    backdrop-filter: blur(
      30px
    ); /* Adjust the pixel value to increase or decrease the blur effect */
    -webkit-backdrop-filter: blur(30px); /* For Safari */
  }

  .nav-expanded {
    background-color: rgba(229, 231, 235, 0.75)31 235); /* bg-gray-200 */
  }
</style>

<script type="module">
  const navToggle = document.getElementById('nav-toggle');
  const navContent = document.getElementById('nav-content');
  const navbar = document.getElementById('navbar'); // Define 'navbar'
  const body = document.body;

  // Check that all elements are not null before adding event listeners
  if (navToggle && navContent && navbar) {
    const toggleText = navToggle.querySelector('p');
    if (toggleText) { // Check that 'toggleText' is not null
      navToggle.addEventListener('click', () => {
        const isHidden = navContent.classList.toggle('hidden');
        navContent.classList.toggle('menu-content-expanded');
        navbar.classList.toggle('nav-expanded'); // Use 'navbar' after checking it's not null

        // Set the text based on the `isHidden` variable state
        toggleText.textContent = isHidden ? 'MENU' : 'CLOSE';

        body.style.overflow = isHidden ? 'auto' : 'hidden';
      });
    }
  }
</script>
